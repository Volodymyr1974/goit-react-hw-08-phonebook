{"version":3,"file":"static/js/470.e69d2f4b.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/pages/Contacts/Contacts.module.css?fb9d","pages/Contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form_box\":\"ContactForm_form_box__Voyl3\",\"form_label\":\"ContactForm_form_label__KFrv0\",\"form_input\":\"ContactForm_form_input__juvV+\",\"form_button\":\"ContactForm_form_button__3kup0\"};","import React, { useState } from \"react\";\nimport style from './ContactForm.module.css';\nimport toast from 'react-hot-toast';\n// import Button from '@mui/material/Button';\nimport { useAddContactMutation, useGetContactsQuery } from '../../redux/contactsApi';\n\n\nconst ContactForm = () => {\n    const { data } = useGetContactsQuery({}, { refetchOnMountOrArgChange: true });\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n    const contactData = { name, number };\n    const [addContact, { isLoading }] = useAddContactMutation();\n    const contactsItems = data;\n\n    const onFormChange = (event) => {\n        const { name, value } = event.target;\n        switch (name) {\n            case 'name':\n                setName(value);\n                break;\n\n            case 'number':\n                setNumber(value);\n                break;\n\n            default:\n                return;\n        }\n    };\n    const handleAddContact = async values => {\n        try {\n            await addContact(values);\n            toast.success('Контакт додано');\n            resetForm();\n        } catch (error) {\n            toast.error('Помилка при додаваннi контакту');\n            console.log(error);\n        }\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        contactsItems.some(\n            contact => contact.name.toLowerCase() === name.toLowerCase()\n        ) ?\n            (toast.error(`Упс...Контакт ${name} вже є у Вашому списку `)) :\n            (handleAddContact(contactData));\n    };\n\n    const resetForm = () => {\n        setName(\"\"); setNumber(\"\");\n    };\n\n    return (\n        <div className={style.form_box}>\n            <form onSubmit={handleSubmit}>\n                <label>\n                    <p className={style.form_label}> Name</p>\n                    <input className={style.form_input}\n                        value={name}\n                        onChange={onFormChange}\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                    />\n                </label>\n\n                <label>\n                    <p className={style.form_label}>Number</p>\n                    <input className={style.form_input}\n                        value={number}\n                        onChange={onFormChange}\n                        type=\"tel\"\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                        required\n                    />\n                </label>\n\n                <button\n                    type=\"submit\" className={style.form_button} disabled={isLoading}>\n                    Add contact\n                </button>\n            </form>\n        </div>\n    );\n};\n\n\n\nexport default ContactForm;\n\n\n","// import style from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter, getFilter } from \"redux/contactsSlice\";\nimport TextField from '@mui/material/TextField';\nconst Filter = () => {\n\n    const dispatch = useDispatch();\n    const filterValue = useSelector(getFilter);\n    return (\n        <TextField\n            id=\"standard-basic\"\n            label=\"Find contacts by name\"\n            type=\"text\"\n            variant=\"standard\"\n            value={filterValue}\n            onChange={e => dispatch(changeFilter(e.currentTarget.value))}\n            sx={{\n                margin: '0 auto',\n                display: 'block',\n                width: 200,\n                marginBottom: 4,\n                '& .MuiInputLabel-root': {\n                    left: 16,\n                },\n            }}\n        />\n    )\n};\n\nexport default Filter;","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactItem_item__gxreB\",\"item_button\":\"ContactItem_item_button__pEcHX\"};","import PropTypes from 'prop-types';\nimport style from './ContactItem.module.css';\nimport { useDeleteContactMutation } from 'redux/contactsApi';\nimport toast from 'react-hot-toast';\n\nconst ContactItem = ({ id, name, number }) => {\n    const [deleteContact, { isLoading }] = useDeleteContactMutation();\n    const handleDeleteContact = async values => {\n        try {\n            await deleteContact(values);\n            toast.success('Контакт видалено');\n\n        } catch (error) {\n            toast.error('Помилка при видаленні контакту');\n            console.log(error);\n        }\n    };\n    return (\n        <div className={style.item}>\n            {`${name} :      ${number}`}\n            <button className={style.item_button}\n                onClick={() => handleDeleteContact(id)}\n                disabled={isLoading}\n                type=\"button\"\n            >\n                Delete\n            </button>\n\n        </div>\n\n\n    )\n};\nContactItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n\n};\nexport default ContactItem;","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\"};","import ContactItem from 'components/ContactItem/ContactItem';\nimport { useSelector } from 'react-redux';\nimport { getFilter } from \"redux/contactsSlice\";\nimport { useGetContactsQuery } from '../../redux/contactsApi';\nimport style from '../ContactList/ContactList.module.css';\n\nconst ContactList = () => {\n    const { data } = useGetContactsQuery({}, { refetchOnMountOrArgChange: true });\n    const filter = useSelector(getFilter);\n    const normalizedFilter = filter.toLowerCase();\n    console.log(data);\n    if (data === undefined) { return }\n    const items = data.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n\n    return (\n        <ul className={style.list}>\n            {(items.map(({ id, name, number }) => (\n                <li key={id}>\n                    <ContactItem\n                        id={id}\n                        name={name}\n                        number={number}\n                    />\n\n                </li>\n            )))}\n        </ul>\n    );\n};\n\n\nexport default ContactList;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Contacts_container__WzsIr\",\"container_title\":\"Contacts_container_title__vRsMs\"};","import ContactForm from '../../components/ContactForm/ContactForm';\nimport Filter from '../../components/Filter/Filter';\nimport ContactList from '../../components/ContactList/ContactList';\nimport style from '../Contacts/Contacts.module.css';\n// import { useGetContactsQuery } from '../../redux/contactsApi';\n// import authSelectors from 'redux/auth/authSelectors';\n// import { useSelector } from 'react-redux';\n\nexport default function Contacts() {\n    // const { data, isLoading, isError } = useGetContactsQuery();\n    // console.log(data, isLoading, isError);\n    // console.log(useGetContactsQuery());\n    // const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n    // console.log(isLoggedIn);\n    return (\n        <div className={style.container}>\n            <h1 className={style.container_title} >Phonebook</h1>\n            <ContactForm />\n            <h2 className={style.container_title}>Contacts</h2>\n            <Filter\n            />\n            {/* {isLoading && < Loader />} */}\n            <ContactList />\n\n        </div>\n    )\n}"],"names":["data","useGetContactsQuery","refetchOnMountOrArgChange","useState","name","setName","number","setNumber","contactData","useAddContactMutation","addContact","isLoading","contactsItems","onFormChange","event","target","value","handleAddContact","values","toast","resetForm","console","log","handleSubmit","e","preventDefault","some","contact","toLowerCase","className","style","onSubmit","onChange","type","pattern","title","required","disabled","dispatch","useDispatch","filterValue","useSelector","getFilter","TextField","id","label","variant","changeFilter","currentTarget","sx","margin","display","width","marginBottom","left","useDeleteContactMutation","deleteContact","handleDeleteContact","onClick","normalizedFilter","undefined","items","filter","includes","map","Contacts"],"sourceRoot":""}